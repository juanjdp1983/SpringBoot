/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package com.stricore.springbootexample.controller;



import com.stricore.springbootexample.bean.Customer;
import com.stricore.springbootexample.bean.CustomerRepository;
import com.stricore.springbootexample.bean.Datos;
import java.util.concurrent.atomic.AtomicLong;

import org.springframework.boot.autoconfigure.web.ErrorController;
import org.springframework.stereotype.Controller;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestMethod;
import org.springframework.web.bind.annotation.RequestParam;
import org.springframework.web.bind.annotation.RestController;
import com.stricore.springbootexample.bean.Datos;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.web.bind.annotation.GetMapping;
import org.springframework.web.bind.annotation.ResponseBody;

 

/**
 *
 * @author Juan
 */

@RestController
public class RestApiController implements ErrorController{

    private static final String template = "Hello, %s!";
    private final AtomicLong counter = new AtomicLong();
    
    
    
        @Autowired // This means to get the bean called userRepository
	           // Which is auto-generated by Spring, we will use it to handle the data
	private CustomerRepository CustomerRepository;

	@GetMapping(path="/add") // Map ONLY GET Requests
	public @ResponseBody String addNewUser (@RequestParam String name) {
		// @ResponseBody means the returned String is the response, not a view name
		// @RequestParam means it is a parameter from the GET or POST request
                System.out.println("A guardar");
		Customer n = new Customer();
                System.out.println("A guardar1");
                //n.setIdCustomer(id);
		n.setName(name);
                System.out.println("A guardar2");
		CustomerRepository.save(n);
                System.out.println("A guardar3");
		return "Saved";
	}
        
        @GetMapping(path="/all")
	public @ResponseBody Iterable<Customer> getAllUsers() {
		// This returns a JSON or XML with the users
		return CustomerRepository.findAll();
	}

    
    
    
    
    
    
    
    

    @RequestMapping("/greeting")
    public Datos greeting(@RequestParam(value="name", defaultValue="World") String name) {
        return new Datos((int) counter.incrementAndGet(),
                            String.format(template, name));
    }
    
    @RequestMapping("/saludos")
    public String saludos() {
        return "Hola";
    }
    
    @RequestMapping("/error")
    public String error() {
        return "error";
    }

    @Override
    public String getErrorPath() {
        return "/error";
    }
}